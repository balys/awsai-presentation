---------------------------


1st slide
My name is Balys and today I would like to introduce you to ML and AWS AI tools.
I work for OR as CDE, and mostly concentrate on Hadoop and Cassandra.


---------------------------


2nd slide
Today we will cover a few topics - firstly I will talk about what ML is and where it can help, as well as look at a practical example via Amazon ML. Next we will look into a branch of Machine Learning - DL, which all new AWS AI tools are based upon. I will then show a demo of Rekognition and Polly. I did not get my Lex account activated yet (I was waiting for 2 months), so If I have time I will show you an alternate tool from Google api.ai, which is almost exact to Lex.


---------------------------


3rd slide
So what is ML? It is - 'definition'. ML covers the business sector for Predictive analytics, where you tend to have some data and would like to make a reasonable assumptions on it. there are many branches and ways to sector machine learning algorithms, but the main ones are 'classification'.


---------------------------


4th slide
SL - Input data is called training data and has a known label or result such as spam/not-spam or a stock price at a time.

Example: Classification with Naive Bayes
This classifier assumes that the presence of a particular feature in a class is unrelated to the presence of any other feature. For example, a fruit may be considered to be an apple if it is red, round, and about 3 inches in diameter.

UL - Data is not labelled before hand, so we need to learn the features ourselves. A lot of times the features are hidden as function parameters and cannot be extracted as a singular logic (image similarity, voice recognition)

SSL - a mixture of both, we may need to apply multiple algorithms (real world use case) to increase the fit of the model.


---------------------------


5th Slide
I wanted to put this slide to explain how to approach your problem. This resembles a default scientific approach. Firstly you need to identify and classify your problem type, then break down the problem as a lists of smaller tasks, define a performance metric and apply this to your dataset (called experience).

You see an example with Spam trap system. Also, it is reasonable to raise an assumption and prove or disprove it later, same as in regular statistics.

---------------------------


6th Slide
Explain image

---------------------------

7th Slide
Demo -> upload the data

Datasource points to data, does not hold it. needs to be as clean as possible (amazon will do some clean up)
It will be split to training and test data automatically.

you can use either a 'guessed' algorithm, or use a custom one to train on your data.

show real time prediction
med,med,4,4,big,high
vhigh,vhigh,2,2,small,low

Show ML performance metric. If low , may need to retrain.

You can use API to push model, but I found the GUI is intuititive. But for real time predictions its extremely useful.

---------------------------

9th slide


Deep learning is a ML branch, using multiple hidden layers in an artificial neural network. This approach tries to model the way the human brain processes light and sound into vision and hearing. Some successful applications of deep learning are computer vision and speech recognition.

Here in the graphic you see a map of inputs (single or multi value). We apply weights of features in the inputs, then wrap the weights into a single output function and run it through an activation function, which will give us a classification 'parameter'.



---------------------------

10th slide

Real neural networks rely on connections between neurons. A neuron consists of a dendrite (cell) and passes it over to an axon (link, connection, it has mutltiple branches). Axons overlap in a process called synapse, where the connection has variable strengths. 
Different parts of our brain are responsible in identifying set of features that define what is visibile in the picture. For example a cat has whiskers, fur, pointy nose , etc. We may not be able to identify certain features quickly, but our brain identifies it instantly (for example define difference between cat and fox)

---------------------------

11th Slide

Explain image


---------------------------
12th slide


The layers are made of nodes. A node combines input from the data with a set of coefficients, or weights, that either amplify or dampen that input, thereby assigning significance to inputs for the task the algorithm is trying to learn. (For example, which input is most helpful is classifying data without error?) These input-weight products are summed and the sum is passed through a node’s so-called activation function, to determine whether and to what extent that signal progresses further through the network to affect the ultimate outcome, say, an act of classification.

Pairing adjustable weights with input features is how we assign significance to those features with regard to how the network classifies and clusters input.

In deep-learning networks, each layer of nodes trains on a distinct set of features based on the previous layer’s output. The further you advance into the neural net, the more complex the features your nodes can recognize, since they aggregate and recombine features from the previous layer.

---------------------------

13th Slide

Gradient Descent

Gradient is another word for slope. In this particular case, the slope we care about describes the relationship between the network’s error and weights; i.e. that is, how does the error vary as the weight is adjusted. which weight will produce the least error? 

As a neural network learns, it slowly adjusts many weights so that they can map signal to meaning correctly. The relationship between network Error and each of those weights is a derivative, dE/dw, that measures the degree to which a slight change in a weight causes a slight change in the error.

The essence of learning in deep learning is nothing more than that: adjusting a model’s weights in response to the error it produces, until you can’t reduce the error any more.


---------------------------

14th Slide

Explain Slide


---------------------------

15th Slide

Explain Slide

---------------------------

16th Slide

Amazon Rekognition is a service that makes it easy to add image analysis to your applications. With Rekognition, you can detect objects, scenes, and faces in images. You can also search and compare faces. Rekognition’s API enables you to quickly add sophisticated deep learning-based visual search and image classification to your applications.

---------------------------

17th Slide

There are some limitations, explain from slide.

---------------------------

18th Slide

Polly explain about it.

---------------------------
19th Slide

Show Rekognition Demo on Portal, go to each tool. upload an image of Avatar to each section.
Let's run a simple Keanu Reeves test to see if the face is being reKongized.



